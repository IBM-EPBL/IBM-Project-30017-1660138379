from dataclasses import dataclass

from pickle import FALSE
from django.shortcuts import render
from .models import store
from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt

def img(request):
    from django.core.files.storage import FileSystemStorage
    from tensorflow.keras.preprocessing import image
    from openpyxl.reader.excel import load_workbook
    import tensorflow as tf
    from django.core.files.storage import default_storage
    from tensorflow import keras
    import numpy as np
    import cv2
    from PIL import Image as img
    import random
    import os
    
    if request.method == 'POST':
        batch_size = 32
        img_height = 64
        img_width = 64
        dir = './static/img/upload'
        for f in os.listdir(dir):
            os.remove(os.path.join(dir, f))
        model_dl = keras.models.load_model("model.h5") 
        
        
        dict = {0:'Apple pie',1:'Baby back ribs',2:'Baklava',3:'Beef carpaccio',4:'Beef tartare',5:'Beet salad',6:'Beignets',7:'Bibimbap',8:'Bread pudding',9:'Breakfast burrito',
        10:'Bruschetta',11:'Caesar salad',12:'Banana',13:'Caprese salad',14:'Carrot cake',15:'Ceviche',16:'Pine apple',17:'Cheese plate',18:'Chicken curry',19:'Chicken quesadilla',
        20:'Chicken wings',21:'Chocolate cake',22:'Jamun',23:'Churros',24:'Clam chowder',25:'Club sandwich',26:'Crab cakes',27:'Creme brulee',28:'Croque madame',
        29:'Apple',30:'Deviled eggs',31:'Donuts',32:'Dumplings',33:'Edamame',34:'Eggs benedict',35:'Escargots',36:'Falafel',37:'Filet mignon',38:'Banana',
        39:'Foie gras',40:'French fries',41:'French onion soup',42:'French toast',43:'Fried calamari',44:'Fried rice',45:'Orange',46:'Garlic bread',47:'Gnocchi',
        48:'Greek salad',49:'Grilled cheese sandwich',50:'Grilled salmon',51:'Guacamole',52:'Gyoza',53:'Hamburger',54:'Hot and sour soup',55:'Hot dog',56:'Huevos rancheros',
        57:'Hummus',58:'Ice cream',59:'Lasagna',60:'Lobster bisque',61:'Lobster roll sandwich',62:'Macaroni and cheese',63:'Mango',64:'Miso soup',65:'Papaya',
        66:'Nachos',67:'Omelette',68:'Jamun',69:'Oysters',70:'Pad thai',71:'Paella',72:'Pancakes',73:'Pine Apple',74:'Peking duck',75:'Pho',76:'Pizza',77:'Pork chop',
        78:'Poutine',79:'Prime rib',80:'Pulled pork sandwich',81:'Ramen',82:'Ravioli',83:'Red velvet cake',84:'Risotto',85:'Samosa',86:'Sashimi',87:'Scallops',88:'Seaweed salad',
        89:'Shrimp and grits',90:'Spaghetti bolognese',91:'Spaghetti carbonara',92:'Guava',93:'Steak',94:'Strawberry shortcake',95:'Sushi',96:'Tacos',97:'Kiwi',
        98:'Papaya',99:'Tuna tartare',100:'Waffles'}
        img = request.FILES['image']
        # file=img.save(filename='1.jpg')
        # print(img)
        # image = st.file_uploader(img, type=["JPEG", "JPG", "PNG"])
        file_name = "static/img/upload/pic.png"
        default_storage.save(file_name, img)
        img_to_detect =cv2.imread('static/img/upload/pic.png', cv2.IMREAD_COLOR)
        # img=cv2.resize(img, (img_rows, img_cols))
        # img = cv2.cvtColor(cv2.imread('lena_caption.png'), cv2.COLOR_BGR2RGB)
        # if(type(image) == type(None)):
        #     pass
        # else:
        # print(len(image))
        # cv2. imwrite('static/img/save.jpg',img_to_detect)
        
        img = cv2.resize(img_to_detect, (64,64), interpolation=cv2.INTER_AREA)
        # img = cv2.resize(img_to_detect,(64,64))
        x = image.img_to_array(img) 
        x = np.expand_dims(x, axis=0)
        imag = np.vstack([x])
        classes = model_dl.predict_classes(imag, batch_size=batch_size)
        text = str(dict[classes.item()])
        print(text)
        wrkbk = load_workbook(r"calorie.xlsx")
        sh = wrkbk.active
        
        for i in range(1,101):
            c=str(sh.cell(row=i,column=1).value)
            # print(c)
            if c == text:
                calo =str(sh.cell(row=i,column=2).value)
                print("calories",calo)
                typr =str(sh.cell(row=i,column=4).value)
                if typr == 'yes':
                    print("Its a junk food-")
                elif typr == 'no':    
                    print("Its a healthy food")
        # cv2.putText(img_to_detect,text,(45,60),cv2.FONT_HERSHEY_SIMPLEX,1.25,(255,0,0),5) 
        # cv2.imshow("Detection Output", img_to_detect)
        import json
        import requests
        api_url='https://api.api-ninjas.com/v1/nutrition?query='
        api_request=requests.get(api_url + text ,headers= {'X-Api-Key': '5N7iKNAXiJy7N2KjpnKWXg==AH2UJ6cd29gWhXLW'})
        try:
            api=json.loads(api_request.content)
            # print(api_request.content)
        except Exception as e:
            api="oops! There was an error"
            print(e)
        # return render(request, 'home.html',{'api':api})
        context={"text":text,"calo":calo,"typr":typr ,"api":api}
        return render(request,'detail.html',context)
        